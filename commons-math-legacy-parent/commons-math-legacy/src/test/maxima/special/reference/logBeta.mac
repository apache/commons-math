/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This script generates reference ("exact") values for the logGamma function.
 * The generated values are stored sequentially in a binary file, as follows
 * x[0], f(x[0]), x[1], f(x[1]), ...
 * where f is the function being sampled.
 */
 
kill(all);
fpprec : 64;

sample(x, y, name) := block(
  stream : openw_binary(name),
  for i : 1 while i <= length(x) do block(
    print(i),
    for j : 1 while j <= length(y) do
      write_binary_data([x[i], y[j], log(beta(x[i], y[j]))], stream)
  ),
  close(stream)
);

x : makelist(bfloat(i / 32), i, 1, 256);
y : makelist(bfloat(j / 32), j, 1, 256);
sample(x, y, "logBeta-01.dat");

x : makelist(bfloat(i / 32), i, 1, 256);
y : makelist(bfloat(j / 32), j, 257, 512);
sample(x, y, "logBeta-02.dat");

x : makelist(bfloat(i / 32), i, 1, 256);
y : makelist(bfloat(j), j, 17, 256);
sample(x, y, "logBeta-03.dat");

x : makelist(bfloat(i / 32), i, 257, 512);
y : makelist(bfloat(j / 32), j, 257, 512);
sample(x, y, "logBeta-04.dat");

x : makelist(bfloat(i / 32), i, 257, 512);
y : makelist(bfloat(j), j, 17, 256);
sample(x, y, "logBeta-05.dat");

x : makelist(bfloat(i), i, 17, 256);
y : makelist(bfloat(j), j, 17, 256);
sample(x, y, "logBeta-06.dat");
